name: Build deploy version

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment'
        required: true
        type: choice
        options:
          - uat
          - prod

jobs:
   # This job will check if the workflow is running on a tag or non-main branch
  validate_trigger:
    runs-on: ubuntu-latest
    outputs:
      valid_trigger: ${{ steps.check_trigger.outputs.valid }}
    steps:
      - name: Check trigger source
        id: check_trigger
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]] || 
             ([[ "${{ github.ref }}" == refs/heads/* ]] && 
              [[ "${{ github.ref }}" != 'refs/heads/main' ]]); then
            echo "valid=true" >> $GITHUB_OUTPUT
          else
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "Error: Workflow can only be triggered on tags or non-main branches"
            exit 1
          fi
  infos:
    needs: validate_trigger
    if: needs.validate_trigger.outputs.valid_trigger == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Job info
        run: |
          echo "Running Deploy version job..."
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Tag: ${{ github.ref }}"
          be_version=$(echo "${{ github.ref }}" | cut -d 'v' -f 2)
          echo "Backend version: $be_version"
          echo "Commit: ${{ github.sha }}"
          

      - name: Checkout repository
        uses: actions/checkout@v3
  build-front-end:
    needs: validate_trigger
    if: needs.validate_trigger.outputs.valid_trigger == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        working-directory: it-vibe-fe
        run: npm install

      - name: Run build
        working-directory: it-vibe-fe
        run: npm run build -- --mode ${{ github.event.inputs.environment }}

      - name: Archive static web-site artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: it-vibe-fe/dist
  deploy:
    needs: [validate_trigger, build-front-end]
    if: needs.validate_trigger.outputs.valid_trigger == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download static web-site artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: it-vibe-fe/dist

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Initialize Terraform
        working-directory: terraform
        run: terraform init

      - name: Select or create terraform workspace
        working-directory: terraform
        run: |
          terraform workspace select ${{ github.event.inputs.environment }} || \
          terraform workspace new ${{ github.event.inputs.environment }}

      - name: Set Terraform variables
        run: |
          echo "BE_VERSION=$(echo ${{ github.ref }} | cut -d 'v' -f 2)" >> $GITHUB_ENV
          echo "ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV

      - name: Apply Terraform configuration
        working-directory: terraform
        run: terraform apply -auto-approve -var "be_version=$BE_VERSION" -var "env=$ENV"

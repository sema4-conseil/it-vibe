openapi: 3.0.0
info:
  title: ITVibe API
  version: 1.0.0
  description: API for managing companies

paths:
  /healthcheck:
    get:
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: '{"status": "healthy"}'
      summary: Health check
      responses:
        "200":
          description: Health check successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /companies:
    get:
      x-amazon-apigateway-integration:
        uri: "${get_companies_lambda_invoke_arn}"
        httpMethod: POST
        type: aws_proxy
      summary: List all companies
      responses:
        "200":
          description: A list of companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
    post:
      x-amazon-apigateway-integration:
        uri: "${create_company_lambda_invoke_arn}"
        httpMethod: POST
        type: aws_proxy
      summary: Create a company
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        "201":
          description: The created company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /companies/{id}:
    get:
      x-amazon-apigateway-integration:
        uri: "${get_company_details_by_id_lambda_invoke_arn}"
        httpMethod: POST
        type: aws_proxy
      summary: Get a company by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The company details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /reviews:
    get:
      x-amazon-apigateway-integration:
        uri: "${get_reviews_by_company_id_lambda_invoke_arn}"
        httpMethod: POST
        type: aws_proxy
      summary: List all reviews for a company
      parameters:
        - name: companyId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of reviews for a company
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-amazon-apigateway-integration:
        uri: "${add_review_lambda_invoke_arn}"
        httpMethod: POST
        type: aws_proxy
      summary: Create a review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddReviewRequest"
      responses:
        "201":
          description: The created review
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateReviewResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /contact:
    post:
      x-amazon-apigateway-integration:
        uri: "${push_contact_message_lambda_invoke_arn}"
        httpMethod: POST
        type: aws_proxy
      summary: Push a contact message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactMessage"
      responses:
        "201":
          description: The contact message is pushed with success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactMessageResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Company:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          example: "aefb1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b"
        name:
          type: string
          example: "ITVibe"
        location:
          type: string
          example: "Paris"
        size:
          type: number
          example: 100
        revenue:
          type: number
          example: 1000000
        industry:
          type: string
          example: "IT"
        description:
          type: string
          example: "IT company"
    Review:
      type: object
      required:
        - id
        - companyId
        - rating
        - comment
      properties:
        id:
          type: string
          example: "aefb1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b"
        companyId:
          type: string
          example: "aefb1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b"
        rating:
          type: number
          example: 5
        comment:
          type: string
          example: "Great company"
    ContactMessage:
      type: object
      required:
        - email
        - messageContent
      properties:
        email:
          type: string
          example: "jhon.dohe@company.com"
        messageContent:
          type: string
          example: "Hello, I would like to know more about your company"
    ContactMessageResponse:
      type: object
      properties:
        message:
          type: string
          example: "Message sent with success"
    AddReviewRequest:
      type: object
      required:
        - company_id
        - rating
        - comment
        - author
      properties:
        company_id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        author:
          type: string
    CreateReviewResponse:
      type: object
      required:
        - company_id
        - review_id
        - rating
        - comment
        - author
      properties:
        company_id:
          type: string
        review_id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        author:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
